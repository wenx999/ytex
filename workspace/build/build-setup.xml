<project name="build-setup" default="help">
	<description><![CDATA[
Setup the ytex environment; does the following:
  * setup lvg
  * generate configuration files
  * create database tables
You must define the ytex.home variable for this script using the -D option:
ant -Dytex.home=c:\java\clinicalnlp\ytex -file build-setup.xml

Prior to executing this script, download lvg2010lite.tgz.
To use this in a 'real' environment, you will need an installation of UMLS,
or you can ask us nicely for a UMLS database dump.

Main target is 'all', which does the following:
  * setup.lvg unpack the lvg to the appropriate directory
  * templateToConfig generates configuration files from templates. 
  * setupDatabase call data/build.xml to setup the database.
  * setup.ytex.web fixes crlf and makes executable tomcat setenv.sh script

For setting up a development environment, you should execute setup.lvg 
and templateToConfig
		
	]]></description>
	<!-- override these variables using eclipse settings/command line -->
	<property name="ytex.home" value=".." />
	<include file="${ytex.home}/libs.system/build-classpath.xml" />
	<property name="lvg.download.dir" value="${ytex.home}/.." />
	<property name="lvg.basename" value="lvg2011lite" />
	<property name="lvg.filename" value="${lvg.basename}.tgz" />
	<property name="lvg.tgz" value="${lvg.download.dir}/${lvg.filename}" />
	<property name="context.root" value="ytex.web" />
	<property name="catalina.base" value="${ytex.home}/web" />

	<target name="help">
		<echo>
Ant build script to setup ytex.
Call with option -projecthelp for more info.
</echo>
	</target>

	<target name="all" depends="setup.lvg,templateToConfig,setupDatabase,setup.ytex.web" description="calls unpack.umls, setup.lvg, templateToConfig, setupDatabase, and setup.ytex.web " />
	<target name="setupDatabase" description="setup ytex database tables">
		<ant dir="${ytex.home}/data" target="all" />
	</target>
	<target name="templateToConfig" description="generate config files from templates using values specified in ytex.properties">
		<condition property="filter.umls.catalog" value="" else="catalog=&quot;${umls.catalog}&quot;">
			<or>
				<!-- for mysql/oracle, no catalog - assume umls in same catalog -->
				<equals arg1="mysql" arg2="${db.type}" />
				<equals arg1="oracle" arg2="${db.type}" />
				<!-- if umls.catalog not set, assume in same catalog -->
				<not>
					<isset property="umls.catalog"/>
				</not>
				<!-- if umls catalog same as db, don't bother -->
				<equals arg1="${umls.catalog}" arg2="${db.name}" />
			</or>
		</condition>
		<!-- default umls schema to ytex schema - this will only be set if umls.schema hasn't been defined -->
		<property name="umls.schema" value="${db.schema}" />
		<copy todir="${ytex.home}" overwrite="yes">
			<fileset dir="${ytex.home}" includes="config/desc/**/*.template.xml,examples/**/*.template.xml" />
			<globmapper from="*.template.xml" to="*.xml" />
			<filterset>
				<!-- with a filter set, the last token overrides previous tokens -->
				<filtersfile file="${ytex.properties}" />
				<filter token="umls.schema" value="${umls.schema}" />
				<filter token="filter.umls.catalog" value="${filter.umls.catalog}" />
			</filterset>
		</copy>
		<copy todir="${ytex.home}" overwrite="yes">
			<fileset dir="${ytex.home}" includes="examples/**/*.template.props" />
			<globmapper from="*.template.props" to="*.props" />
			<filterset>
				<filtersfile file="${ytex.properties}" />
			</filterset>
		</copy>
		<copy todir="${ytex.home}/config/desc" overwrite="yes">
			<fileset dir="${ytex.home}/config/desc" includes="**/*.template.properties" />
			<globmapper from="*.template.properties" to="*.properties" />
			<filterset>
				<filtersfile file="${ytex.properties}" />
			</filterset>
		</copy>
	</target>
	<!--
	<target name="setupMavericResources" description="copy resources from maveric to ytex">
		<delete dir="${ytex.home}/maveric/resources" quiet="yes" />
		<mkdir dir="${ytex.home}/maveric/resources" />
		<copy todir="${ytex.home}/maveric/resources">
			<fileset dir="${maveric.home}">
				<include name="lookup/**/*.*" />
				<include name="lvg/**/*.*" />
				<include name="models/**/*.*" />
				<include name="sentdetect/**/*.*" />
				<include name="tokenizer/**/*.*" />
			</fileset>
		</copy>
	</target>
	-->
	<target name="setup.ytex.web" description="setup ytex.web application for tomcat">
		<mkdir dir="${catalina.base}/temp" />
		<fixcrlf file="${catalina.base}/bin/setenv.sh" />
		<chmod file="${catalina.base}/bin/setenv.sh" perm="u+x"/>
	</target>

	<target name="download.lvg" description="download lvg2010lite.tgz from nlm">
		<echo>Downloading ${lvg.filename} to ${lvg.download.dir}.  this may take a while!</echo>
		<copy todir="${lvg.download.dir}" flatten="true">
			<resources>
				<url url="http://lexsrv3.nlm.nih.gov/LexSysGroup/Projects/lvg/2011/release/lvg2011lite.tgz" />
			</resources>
		</copy>
	</target>
	<target name="setup.lvg" description="unpack lvg data directory to resources folder">
		<available file="${lvg.tgz}" property="lvg.available"/>
		<antcall target="setup.lvg.unzip" />
		<antcall target="setup.lvg.warn" />
	</target>
	<target name="setup.lvg.unzip" if="lvg.available">
		<untar src="${lvg.tgz}" compression="gzip" dest="${ytex.home}/maveric/resources/lvg">
			<patternset>
				<include name="${lvg.basename}/data/**/*.*" />
				<exclude name="${lvg.basename}/data/**/lvg.properties" />
			</patternset>
		</untar>
		<move file="${ytex.home}/maveric/resources/lvg/${lvg.basename}/data" todir="${ytex.home}/maveric/resources/lvg" />
		<delete dir="${ytex.home}/maveric/resources/lvg/${lvg.basename}" />
	</target>
	<target name="setup.lvg.warn" unless="lvg.available">
		<echo>${lvg.tgz} not available - please execute the setup.lvg.all target to download and setup lvg</echo>
	</target>
	
	<target name="setup.lvg.all" description="download and unpack lvg" depends="download.lvg,setup.lvg">
		<echo>LVG setup complete.  You can remove ${lvg.tgz}</echo>
	</target>
	<target name="update.manifest" description="update the manifest">
		<manifestclasspath property="ytex.classpath.man" jarfile="${ytex.home}/lib/ytex.model.jar">
			<classpath>
				<fileset dir="${catalina.base}/webapps/${context.root}/WEB-INF/lib" includes="*.jar" />
				<fileset dir="${ytex.home}/lib/mysql-connector-java-5.1.9" includes="**/*.jar" />
				<fileset dir="${ytex.home}/lib/oracle11.2.0.1.0" includes="**/*.jar" />
				<fileset dir="${ytex.home}/lib/sqljdbc_3.0" includes="**/*.jar" />
			</classpath>
		</manifestclasspath>
		<manifest file="${ytex.home}/lib/MANIFEST.MF">
			<attribute name="Class-Path" value="${ytex.classpath.man}" />
		</manifest>
		<zip destfile="${ytex.home}/lib/ytex.model.jar" update="yes">
			<zipfileset dir="${ytex.home}/lib" includes="MANIFEST.MF" prefix="META-INF" />
		</zip>
	</target>
</project>