<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<!-- define node info for mapping queries -->
	<bean name="nodeInstanceInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="instance" />
		<property name="values">
			<list>
				<value>instance_id</value>
			</list>
		</property>
	</bean>
	<bean name="nodeConceptInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="ontology_concept" />
		<property name="values">
			<list>
				<value>code</value>
			</list>
		</property>
	</bean>
	<bean name="nodeWordInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="word" />
		<property name="values">
			<list>
				<value>canonical_form</value>
			</list>
		</property>
	</bean>
	<!-- First query instantiates instances down to named entities 2nd query 
		adds word nodes to document nodes. -->
	<bean name="treeMappingInfo" class="ytex.kernel.tree.TreeMappingInfo">
		<property name="instanceIDField" value="instance_id" />
		<property name="instanceQueryMappingInfo">
			<bean class="ytex.kernel.tree.QueryMappingInfo">
				<property name="query">
					<value><![CDATA[
select distinct hs.instance_id, c.code
from hotspot_sentence hs
inner join i2b2_2008_disease ds on ds.disease = hs.label
/* get named entities */
inner join anno_contain ac on ac.parent_anno_base_id = hs.anno_base_id and ac.child_uima_type_id = 8
inner join anno_named_entity ne on ne.anno_base_id = ac.child_anno_base_id
/* get ontology concepts */
inner join ytex.anno_ontology_concept c on c.anno_base_id = ne.anno_base_id
/* exclude zero vectors
for some reason this slows things down greatly
left join hotspot_zero_vector hzv
	on hzv.instance_id = hs.instance_id
	and hzv.label = hs.label
	and hzv.cutoff = @export.cutoff@
	and hzv.name = hs.name
*/
/* limit to label */
where ds.disease_id = @export.label@
and evaluation > @export.cutoff@
/* and hzv.hotspot_zero_vector_id is null */
order by hs.instance_id
					]]></value>
				</property>
				<property name="nodeTypes">
					<list>
						<ref bean="nodeInstanceInfo" />
						<ref bean="nodeConceptInfo" />
					</list>
				</property>
			</bean>
		</property>
		<property name="nodeQueryMappingInfos">
			<list>
				<bean class="ytex.kernel.tree.QueryMappingInfo">
					<property name="query">
						<value><![CDATA[
select distinct hs.instance_id, w.canonical_form
from hotspot_sentence hs
inner join i2b2_2008_disease ds on ds.disease = hs.label
/* get words */
inner join anno_contain ac on ac.parent_anno_base_id = hs.anno_base_id and ac.child_uima_type_id = 25
inner join anno_word_token w on w.anno_base_id = ac.child_anno_base_id and w.canonical_form is not null
/* exclude words are not in named entities */
left join anno_contain acw on acw.child_anno_base_id = ac.child_anno_base_id and acw.parent_uima_type_id = 8
/* exclude zero vectors
left join hotspot_zero_vector hzv
	on hzv.instance_id = hs.instance_id
	and hzv.label = hs.label
	and hzv.cutoff = @export.cutoff@
*/
where acw.parent_anno_base_id is null
and ds.disease_id = @export.label@
and evaluation > @export.cutoff@
/* and hzv.hotspot_zero_vector_id is null */
order by hs.instance_id
					]]></value>
					</property>
					<property name="nodeTypes">
						<list>
							<ref bean="nodeInstanceInfo" />
							<ref bean="nodeWordInfo" />
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
</beans>