kernel.algo=libsvm
cv.storeInstanceEval=no
cv.storeProb=no
kernel.eval.tmpdir=${java.io.tmpdir}
# cost for svm
cv.costs=0.001,0.01,0.1,1,10,100,1000
# gamma for rbf kernel - used by libsvm, svmlight, semil
cv.rbf.gammas=0.01,0.1,1,10,100
# degrees to test polynomial kernel with
cv.poly.degrees=2,3
ant.pbs=${user.home}/ant.pbs
# types of kernels to test - see libsvm/svmlight -t param
kernel.types=0
kernel.classweights=${ytex.home}/${kernel.name}/${svm.type}/classWeights.properties
parallel.folds=false
parallel.labels=false
kernel.threads=1
kernel.param1=
kernel.param2=
# default timeout 5 minutes
kernel.timeout=300000

# default libsvm lines - build logistic models to get p-values
libsvm.train.line=-q -b 1 
libsvm.test.line=-b 1 

# semil options
# default options for 'uninteresting' parameters
semil.line=-k 0 -u 0 -r 50 -pl 1 -lambda 0 -mu 0.5
# distance metrics for use with semil
# default to euclidean and pearson, i.e. cosine distance
cv.semil.metrics=euclidean,pearson
# degree of neighbors to include in distance matrix
cv.semil.degrees=5,10
# consistency and gaussian random field methods
cv.semil.methods=-l 1 -h 1,-l 0 -h 0
