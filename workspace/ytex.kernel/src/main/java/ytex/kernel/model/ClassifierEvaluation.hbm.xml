<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="ytex.kernel.model">
	<class name="FeatureEvaluation" table="feature_eval">
		<id name="featureEvaluationId" column="feature_eval_id">
			<generator class="native">
				<param name="sequence">feature_eval_sequence</param>
			</generator>
		</id>
		<property name="corpusName" column="corpus_name" />
		<property name="featureSetName" column="featureset_name" />
		<property name="param1" column="param1" />
		<property name="label" />
		<property name="crossValidationFoldId" column="cv_fold_id" />
		<property name="evaluationType" column="type" />
		<list name="features" table="feature_rank" cascade="all,delete-orphan" 
			inverse="true">
			<key column="feature_eval_id" />
			<list-index column="rank" base="1" />
			<one-to-many class="FeatureRank" />
		</list>
	</class>
	<class name="FeatureRank" table="feature_rank">
		<id name="featureRankId" column="feature_rank_id">
			<generator class="native">
				<param name="sequence">feature_rank_sequence</param>
			</generator>
		</id>
		<many-to-one name="featureEval" class="FeatureEvaluation"
			column="feature_eval_id" />
		<property name="featureName" column="feature_name" />
		<property name="evaluation" column="evaluation" />
		<property name="rank" column="rank" />
	</class>

	<class name="CrossValidationFold" table="cv_fold">
		<id name="crossValidationFoldId" column="cv_fold_id">
			<generator class="native">
				<param name="sequence">classifier_fold_sequence</param>
			</generator>
		</id>
		<property name="corpusName" column="corpus_name" />
		<property name="splitName" column="split_name" />
		<property name="label" />
		<property name="run" />
		<property name="fold" />
		<!-- property name="train" / -->
		<set name="instanceIds" table="cv_fold_instance" cascade="all">
			<key column="cv_fold_id" />
			<composite-element class="CrossValidationFoldInstance">
				<property name="instanceId" column="instance_id" type="int" />
				<property name="train" />
			</composite-element>
		</set>
	</class>
	<class name="ClassifierEvaluation" table="classifier_eval">
		<id name="classifierEvaluationId" column="classifier_eval_id">
			<generator class="native">
				<param name="sequence">classifier_eval_sequence</param>
			</generator>
		</id>
		<property name="name" />
		<property name="experiment" />
		<property name="fold" />
		<property name="run" />
		<property name="algorithm" />
		<property name="label" />
		<property name="options" />
		<property name="param1" />
		<property name="param2" />
		<property name="model" column="model" type="binary" />
		<map name="classifierIRStats" inverse="true" table="classifier_eval_ir">
			<key column="classifier_eval_id" />
			<map-key column="ir_class_id" type="int" />
			<one-to-many class="ClassifierEvaluationIRStat" />
		</map>
		<map name="classifierInstanceEvaluations" inverse="true"
			table="classifier_instance_eval">
			<key column="classifier_eval_id" />
			<map-key column="instance_id" type="int" />
			<one-to-many class="ClassifierInstanceEvaluation" />
		</map>
		<joined-subclass name="SVMClassifierEvaluation" table="classifier_eval_svm">
			<key column="classifier_eval_id" />
			<property name="cost" />
			<property name="weight" />
			<property name="degree" />
			<property name="gamma" />
			<property name="kernel" />
			<property name="supportVectors" />
			<property name="vcdim" />
		</joined-subclass>
		<joined-subclass name="SemiLClassifierEvaluation"
			table="classifier_eval_semil">
			<key column="classifier_eval_id" />
			<property name="distance" column="distance" />
			<property name="degree" column="degree" />
			<property name="softLabel" column="soft_label" />
			<property name="normalizedLaplacian" column="norm_laplace" />
			<property name="mu" column="mu" />
			<property name="lambda" column="lambda" />
			<property name="gamma" column="gamma" />
			<property name="percentLabeled" column="pct_labeled" />
		</joined-subclass>
	</class>
	<class name="ClassifierEvaluationIRStat" table="classifier_eval_ir">
		<id name="classifierEvaluationIRStatId" column="classifier_instance_eval_id">
			<generator class="native">
				<param name="sequence">classifier_eval_ir_sequence</param>
			</generator>
		</id>
		<many-to-one name="classifierEvaluation" class="ClassifierEvaluation"
			column="classifier_eval_id" not-null="true" />
		<property name="irClassId" column="ir_class_id" />
		<property name="tp" />
		<property name="fp" />
		<property name="tn" />
		<property name="fn" />
		<property name="ppv" />
		<property name="npv" />
		<property name="sensitivity" column="sens" />
		<property name="specificity" column="spec" />
		<property name="f1" />
	</class>
	<class name="ClassifierInstanceEvaluation" table="classifier_instance_eval">
		<id name="classifierInstanceEvaluationId" column="classifier_instance_eval_id">
			<generator class="native">
				<param name="sequence">classifier_instance_eval_sequence</param>
			</generator>
		</id>
		<property name="instanceId" column="instance_id" />
		<property name="predictedClassId" column="pred_class_id" />
		<property name="targetClassId" column="target_class_id" />
		<many-to-one name="classifierEvaluation" class="ClassifierEvaluation"
			column="classifier_eval_id" not-null="true" />
		<map name="classifierInstanceProbabilities" table="classifier_instance_eval_prob">
			<key column="classifier_instance_eval_id" />
			<map-key column="class_id" type="int" />
			<element column="probability" type="double" />
		</map>
	</class>
	<query name="getCrossValidationFoldByName"><![CDATA[
		from CrossValidationFold
		where corpusName = :corpusName
		and splitName = :splitName  
	]]></query>
	<query name="getCrossValidationFold"><![CDATA[
		from CrossValidationFold
		where name = :name
		and splitName = :splitName
		and label = :label
		and	run = :run
		and fold = :fold
	]]></query>
	<query name="getFeatureEvaluationByNameAndType"><![CDATA[
		from FeatureEvaluation
		where corpusName = :corpusName
		and featureSetName = :featureSetName
		and param1 = :param1
		and evaluationType = :evaluationType
	]]></query>
	<query name="getFeatureEvaluationByNK"><![CDATA[
		from FeatureEvaluation
		where corpusName = :corpusName
		and featureSetName = :featureSetName
		and param1 = :param1
		and crossValidationFoldId = :crossValidationFoldId
		and evaluationType = :evaluationType
		and label = :label
	]]></query>
	<query name="getThresholdFeatures"><![CDATA[
		from FeatureRank
		where featureEval.corpusName = :corpusName
		and featureEval.featureSetName = :featureSetName
		and featureEval.param1 = :param1
		and featureEval.crossValidationFoldId = :crossValidationFoldId
		and featureEval.evaluationType = :evaluationType
		and featureEval.label = :label
		and evaluation >= :evaluation
	]]></query>
	<query name="getTopFeatures"><![CDATA[
		from FeatureRank
		where featureEval.corpusName = :corpusName
		and featureEval.featureSetName = :featureSetName
		and featureEval.param1 = :param1
		and featureEval.crossValidationFoldId = :crossValidationFoldId
		and featureEval.evaluationType = :evaluationType
		and featureEval.label = :label
		order by evaluation desc
	]]></query>
 	<query name="deleteFeatureRank"><![CDATA[
		delete from FeatureRank r
		where featureEval.featureEvaluationId = :featureEvaluationId
	]]></query>
	<query name="deleteFeatureEval"><![CDATA[
		delete from FeatureEvaluation
		where featureEvaluationId = :featureEvaluationId
	]]></query>
	<query name="getCorpusCuiTuis"><![CDATA[
		select s.cui, s.tui 
		from FeatureRank r, MRSTY s
		where r.featureEval.corpusName = :corpusName
		and r.featureEval.featureSetName = :featureSetName
		and r.featureEval.param1 = :param1
		and r.featureEval.crossValidationFoldId = :crossValidationFoldId
		and r.featureEval.evaluationType = :evaluationType
		and r.featureEval.label = :label
		and r.featureName = s.cui
	]]></query>	
 
</hibernate-mapping>