<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- <http entry-point-ref="casEntryPoint" use-expressions="true"> <intercept-url 
		pattern="/" access="permitAll" /> <intercept-url pattern="/index.jsp" access="permitAll" 
		/> <intercept-url pattern="/cas-logout.jsp" access="permitAll" /> <intercept-url 
		pattern="/casfailed.jsp" access="permitAll" /> <intercept-url pattern="/secure/extreme/**" 
		access="hasRole('ROLE_SUPERVISOR')" /> <intercept-url pattern="/secure/**" 
		access="hasRole('ROLE_USER')" /> <intercept-url pattern="/**" access="hasRole('ROLE_USER')" 
		/> <custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" 
		/> <custom-filter ref="singleLogoutFilter" before="CAS_FILTER" /> <custom-filter 
		ref="casFilter" position="CAS_FILTER" /> <logout logout-success-url="/cas-logout.jsp" 
		/> </http> -->
	<!-- <b:bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint" 
		p:serviceProperties-ref="serviceProperties" p:loginUrl="https://${cas.server.host}/cas/login" 
		/> <b:bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter" 
		p:authenticationManager-ref="authManager" p:serviceProperties-ref="serviceProperties" 
		p:proxyGrantingTicketStorage-ref="pgtStorage" p:proxyReceptorUrl="/j_spring_cas_security_proxyreceptor"> 
		<b:property name="authenticationDetailsSource"> <b:bean class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource" 
		/> </b:property> <b:property name="authenticationFailureHandler"> <b:bean 
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler" 
		p:defaultFailureUrl="/casfailed.jsp" /> </b:property> </b:bean> -->

	<http entry-point-ref="casEntryPoint">
		<!-- <intercept-url pattern="/" filters="none" /> <intercept-url pattern="/index.jsp" 
			filters="none" /> <intercept-url pattern="/cas-logout.jsp" filters="none" 
			/> <intercept-url pattern="/casfailed.jsp" filters="none" /> <intercept-url 
			pattern="/secure/extreme/**" access="ROLE_SUPERVISOR" /> -->
		<intercept-url pattern="/secure/**" access="ROLE_USER" />
		<!-- <intercept-url pattern="/**" access="ROLE_USER" /> -->
		<custom-filter position="CAS_FILTER" ref="casFilter" />
	</http>
	<!-- <http auto-config='true'> <intercept-url pattern="/**" access="ROLE_USER" 
		/> </http> <authentication-manager> <authentication-provider> <user-service> 
		<user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" 
		/> <user name="bob" password="bobspassword" authorities="ROLE_USER" /> </user-service> 
		</authentication-provider> </authentication-manager> -->

	<b:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<b:property name="authenticationManager" ref="authenticationManager" />
	</b:bean>
	<b:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<b:property name="loginUrl" value="https://${cas.server.host}/cas/login" />
		<b:property name="serviceProperties" ref="serviceProperties" />
	</b:bean>
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthProvider" />
	</authentication-manager>
	<!-- <user-service id="userService"> <user name="vngarla" password="vngarla" 
		authorities="ROLE_SUPERVISOR,ROLE_USER" /> <user name="dianne" password="dianne" 
		authorities="ROLE_USER" /> <user name="scott" password="scott" authorities="ROLE_USER" 
		/> </user-service> -->
	<!-- This filter handles a Single Logout Request from the CAS Server <b:bean 
		id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" 
		/> -->
	<!-- This filter redirects to the CAS Server to signal Single Logout should 
		be performed <b:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter" 
		p:filterProcessesUrl="/j_spring_cas_security_logout"> <b:constructor-arg 
		value="https://${cas.server.host}/cas/logout" /> <b:constructor-arg> <b:bean 
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" 
		/> </b:constructor-arg> </b:bean> <b:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties" 
		p:service="http://${cas.service.host}/j_spring_cas_security_check" 
		p:authenticateAllArtifacts="true" /> -->

	<b:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<b:property name="service"
			value="http://${cas.service.host}/j_spring_cas_security_check" />
		<b:property name="sendRenew" value="false" />
	</b:bean>

	<!-- NOTE: In a real application you should not use an in memory implementation. 
		You will also want to ensure to clean up expired tickets by calling ProxyGrantingTicketStorage.cleanup() 
		<b:bean id="pgtStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" 
		/> -->
	<b:bean id="casAuthProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<b:property name="userDetailsService" ref="casUserDetailsService" />
		<b:property name="serviceProperties" ref="serviceProperties" />
		<b:property name="ticketValidator">
			<b:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<b:constructor-arg index="0"
					value="https://${cas.server.host}/cas" />
			</b:bean>
		</b:property>
		<b:property name="key" value="casAuthProviderKey" />

	</b:bean>
	<b:bean id="casUserDetailsService" class="ytex.umls.cas.CASUserDetailsServiceImpl">
	</b:bean>
	<!-- Configuration for the environment can be overriden by system properties -->
	<context:property-placeholder
		system-properties-mode="OVERRIDE" properties-ref="environment" />
	<util:properties id="environment">
		<b:prop key="cas.service.host">localhost:8080/umls.download</b:prop>
		<b:prop key="cas.server.host">utslogin.nlm.nih.gov</b:prop>
	</util:properties>

</b:beans>
