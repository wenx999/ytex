<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<!-- top level kernel - norm of convolution on documents -->
	<bean id="instanceKernel" parent="abstractNormKernel">
		<property name="delegateKernel">
			<bean class="ytex.kernel.evaluator.ConvolutionKernel">
				<property name="delegateKernel" ref="documentKernel" />
				<property name="pow" value="2" />
			</bean>
		</property>
	</bean>
	<!--
		document kernel - norm of convolution on lexical units. Only compare
		documents of same type
	-->
	<bean id="documentKernel" parent="abstractNormKernel">
		<property name="delegateKernel">
			<bean class="ytex.kernel.evaluator.ProductKernel">
				<property name="delegateKernels">
					<list>
						<bean class="ytex.kernel.evaluator.NodeAttributeKernel">
							<property name="attributeName" value="document_type_id" />
							<property name="delegateKernel" ref="equalityKernel" />
						</bean>
						<bean class="ytex.kernel.evaluator.SumKernel">
							<property name="delegateKernels">
								<list>
									<bean class="ytex.kernel.evaluator.ConvolutionKernel">
										<property name="nodeType" value="named_entity" />
										<property name="delegateKernel" ref="namedEntityKernel" />
									</bean>
									<bean class="ytex.kernel.evaluator.ConvolutionKernel">
										<property name="nodeType" value="word" />
										<property name="delegateKernel" ref="wordKernel" />
									</bean>
								</list>
							</property>
						</bean>
					</list>
				</property>
			</bean>
		</property>
	</bean>
	<!-- namedEntityKernel - norm of convolution of concepts -->
	<bean id="namedEntityKernel" parent="abstractNormKernel">
		<property name="delegateKernel">
			<bean class="ytex.kernel.evaluator.ConvolutionKernel">
				<property name="delegateKernel" ref="compositeConceptKernel" />
			</bean>
		</property>
	</bean>
	<!--
		Check overlapping main semantic type. Concept kernel is lin * lch
	-->
	<bean id="compositeConceptKernel" class="ytex.kernel.evaluator.NodeAttributeKernel">
		<property name="attributeName" value="code" />
		<property name="delegateKernel">
			<bean class="ytex.kernel.evaluator.ProductKernel">
				<property name="delegateKernels">
					<list>
						<!-- 
						<ref bean="semanticTypeKernel" />
					 -->
						<ref bean="conceptKernel" />
					</list>
				</property>
			</bean>
		</property>
	</bean>
	<!-- wordKernel - simply compare words -->
	<bean id="wordKernel" class="ytex.kernel.evaluator.NodeAttributeKernel">
		<property name="attributeName" value="canonical_form" />
		<property name="delegateKernel" ref="equalityKernel" />
	</bean>
	<!-- define node info for mapping queries -->
	<bean name="nodeInstanceInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="instance" />
		<property name="values">
			<list>
				<value>instance_id</value>
			</list>
		</property>
	</bean>
	<bean name="nodeDocInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="doc" />
		<property name="values">
			<list>
				<value>document_type_id</value>
				<value>document_id</value>
			</list>
		</property>
	</bean>
	<bean name="nodeNEInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="named_entity" />
		<property name="values">
			<list>
				<value>anno_base_id</value>
				<value>confidence</value>
			</list>
		</property>
	</bean>
	<bean name="nodeOCInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="ontology_concept" />
		<property name="values">
			<list>
				<value>anno_ontology_concept_id</value>
				<value>code</value>
			</list>
		</property>
	</bean>
	<bean name="nodeWordInfo" class="ytex.kernel.tree.NodeMappingInfo">
		<property name="nodeType" value="word" />
		<property name="values">
			<list>
				<value>anno_base_id</value>
				<value>canonical_form</value>
			</list>
		</property>
	</bean>
	<!--
		First query instantiates instances down to named entities 2nd query
		adds word nodes to document nodes for debugging add to query: and uid
		in (97634811, 97636670, 97634946, 97634957, 97635067,
		97635659,97635718, 97635942, 97636018, 97636701, 97636837)
	-->
	<bean name="treeMappingInfo" class="ytex.kernel.tree.TreeMappingInfo">
		<property name="instanceIDField" value="instance_id" />
		<property name="instanceQueryMappingInfo">
			<bean class="ytex.kernel.tree.QueryMappingInfo">
				<property name="query">
					<value><![CDATA[
	select k.uid instance_id, k.document_type_id, ak.document_id, ne.anno_base_id, ne.confidence, c.anno_ontology_concept_id, c.code
	from ytex.document d
	inner join ytex.anno_base ak on ak.document_id = d.document_id
	inner join ytex.anno_dockey k on ak.anno_base_id = k.anno_base_id
	inner join ytex.anno_base an on an.document_id = ak.document_id
	inner join ytex.anno_named_entity ne on ne.anno_base_id = an.anno_base_id
	inner join ytex.anno_ontology_concept c on c.anno_base_id = an.anno_base_id
	where d.analysis_batch = 'cmc-word'
	order by k.uid, k.document_type_id, ak.document_id, ne.anno_base_id, c.anno_ontology_concept_id
					]]></value>
				</property>
				<property name="nodeTypes">
					<list>
						<ref bean="nodeInstanceInfo" />
						<ref bean="nodeDocInfo" />
						<ref bean="nodeNEInfo" />
						<ref bean="nodeOCInfo" />
					</list>
				</property>
			</bean>
		</property>
		<property name="nodeQueryMappingInfos">
			<list>
				<bean class="ytex.kernel.tree.QueryMappingInfo">
					<property name="query">
						<value><![CDATA[
	select k.document_type_id, ak.document_id, an.anno_base_id, w.canonical_form
	from ytex.document d
	inner join ytex.anno_base ak on ak.document_id = d.document_id
	inner join ytex.anno_dockey k on ak.anno_base_id = k.anno_base_id
	inner join ytex.anno_base an on an.document_id = ak.document_id
	inner join ytex.anno_word_token w on w.anno_base_id = an.anno_base_id
	left join (
	    select a.document_id, a.anno_base_id, a.span_begin, a.span_end
	    from ytex.anno_base a
	    inner join ytex.anno_named_entity ne on a.anno_base_id = ne.anno_base_id
	) ne on ne.document_id = d.document_id 
	    and ne.span_begin <= an.span_begin 
	    and ne.span_end >= an.span_end
	where canonical_form is not null
	and analysis_batch = 'cmc-word'
	and ne.anno_base_id is null
	and w.canonical_form not in (select stopword from stopword)
					]]></value>
					</property>
					<property name="nodeTypes">
						<list>
							<ref bean="nodeDocInfo" />
							<ref bean="nodeWordInfo" />
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="corpusKernelEvaluator" parent="abstractCorpusKernelEvaluator">
		<property name="instanceKernel" ref="instanceKernel" />
		<property name="instanceTreeBuilder" ref="instanceTreeBuilder" />
		<property name="treeMappingInfo" ref="treeMappingInfo" />
		<property name="kernelName" value="ctakes-nosemfilter" />
		<property name="trainInstanceIDQuery">
			<value><![CDATA[
			select documentId from cmcdocument where documentSet = 'train' order by documentId asc
			]]></value>
		</property>
		<property name="testInstanceIDQuery">
			<value><![CDATA[
			select documentId from cmcdocument where documentSet = 'test' order by documentId asc
			]]></value>
		</property>
	</bean>
</beans>