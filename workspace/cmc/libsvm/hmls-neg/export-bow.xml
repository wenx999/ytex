<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="outdir"></entry>
	<entry key="train.instance.query"><![CDATA[
	select uid, 1 label, case when CLASS = 'homeless' then 1 else 0 end class
	from HMLS.KASHYAP_NOTES_BYDATE where CLASS is not null
]]></entry>
	<!--  perform tf-idf transformation on raw term frequencies -->
	<entry key="numericWordQuery"><![CDATA[
	/* stemmed words */
	select tf.uid, tf.canonical_form, 
		(cast(freq as float) / cast(dl.length as float)) * (log(d.doccount) - log(1+f.numdocs)) tfidf
	from
	(
	  select k.uid, w.canonical_form, count(*) freq
		from hmls.document d
		inner join hmls.anno_base ak on ak.document_id = d.document_id
		inner join hmls.anno_dockey k on ak.anno_base_id = k.anno_base_id
		inner join hmls.anno_base an on an.document_id = ak.document_id
		inner join hmls.anno_word_token w on w.anno_base_id = an.anno_base_id
		where canonical_form is not null
		and analysis_batch = 'hmls-umls'
		and w.canonical_form not in (select stopword from hmls.stopword)
	  group by k.uid, w.canonical_form
	) tf
	inner join hmls.tfidf_doclength dl on tf.uid = dl.instance_id and dl.name = 'hmls-umls-word'
	inner join hmls.tfidf_docfreq f on f.term = tf.canonical_form and f.name = 'hmls-umls-word'
	,(
	  select count(*) doccount from HMLS.KASHYAP_NOTES_BYDATE where CLASS is not null
	) d
	union
	/* query to get cuis */
	select tf.uid, 'pos_'+tf.code, 
		(cast(freq as float) / cast(dl.length as float)) * (log(d.doccount) - log(1+f.numdocs)) tfidf
	from
	(
		select k.uid, c.code, count(*) freq
		from hmls.document d
		inner join hmls.anno_base ak on ak.document_id = d.document_id
		inner join hmls.anno_dockey k on ak.anno_base_id = k.anno_base_id
		inner join hmls.anno_base an on an.document_id = ak.document_id
		inner join HMLS.anno_named_entity ne on ne.anno_base_id = an.anno_base_id
		inner join hmls.anno_ontology_concept c on c.anno_base_id = an.anno_base_id
		where analysis_batch = 'hmls-umls'
		and ne.certainty = 0
		group by k.uid, c.code
	) tf
	inner join hmls.tfidf_doclength dl on tf.uid = dl.instance_id and dl.name = 'hmls-umls-cui-pos'
	inner join hmls.tfidf_docfreq f on f.term = tf.code and f.name = 'hmls-umls-cui-pos'
	,(
	  select count(*) doccount from HMLS.KASHYAP_NOTES_BYDATE where CLASS is not null
	) d
	union
	select tf.uid, 'neg_'+tf.code, 
		(cast(freq as float) / cast(dl.length as float)) * (log(d.doccount) - log(1+f.numdocs)) tfidf
	from
	(
		select k.uid, c.code, count(*) freq
		from hmls.document d
		inner join hmls.anno_base ak on ak.document_id = d.document_id
		inner join hmls.anno_dockey k on ak.anno_base_id = k.anno_base_id
		inner join hmls.anno_base an on an.document_id = ak.document_id
		inner join HMLS.anno_named_entity ne on ne.anno_base_id = an.anno_base_id
		inner join hmls.anno_ontology_concept c on c.anno_base_id = an.anno_base_id
		where analysis_batch = 'hmls-umls'
		and ne.certainty = -1
		group by k.uid, c.code
	) tf
	inner join hmls.tfidf_doclength dl on tf.uid = dl.instance_id and dl.name = 'hmls-umls-cui-neg'
	inner join hmls.tfidf_docfreq f on f.term = tf.code and f.name = 'hmls-umls-cui-neg'
	,(
	  select count(*) doccount from HMLS.KASHYAP_NOTES_BYDATE where CLASS is not null
	) d
]]></entry>
</properties>
