<project name="cmc">
	<property environment="env" />
	<property name="ytex.home" value=".." />
	<include file="${ytex.home}/libs.system/build-classpath.xml" />
	<property name="mysql.home" value="${env.MYSQL_HOME}" />
	<property name="mysql.line" value="--user=${db.username} --password=${db.password} --host=${db.host} ${db.schema}" />
	<target name="kernel.tree" description="export the tree">
		<property name="tree.name" value="tree-ctakes-flatne" />
		<mkdir dir="tree/${tree.name}" />
		<copy file="exp/${tree.name}/tree.xml" tofile="tree/${tree.name}/tree.xml" overwrite="yes">
		</copy>
		<java classname="ytex.KernelLauncher" fork="yes" classpathref="${kernel.cp}" dir="tree/${tree.name}">
			<arg line="-beans tree.xml -storeInstanceMap tree.obj" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
	</target>
	<target name="kernel.init.label" description="load the export.cutoff for the specified label">
		<property name="tree.name" value="tree-ctakes" />
		<property name="export.label" value="" />
		<property name="kernel.experiment" value="kern-ctakes-ic" />
		<property name="kernel.xml" value="${kernel.experiment}.xml" />
		<property name="label.tree" value="tree.obj" />
		<property name="export.tree.srcdir" value="./exp/${tree.name}" />
		<property name="export.tree.basedir" value="./tree/${tree.name}" />
		<property name="export.tree.outdir" value="./tree/${tree.name}" />
		<property name="export.libsvm.outdir" value="libsvm/${kernel.experiment}" />
		<!--
		<property file="${export.tree.srcdir}/label.properties" />
		<property file="${basedir}/exp/labelNames.properties" />
		<propertycopy property="export.label.name" from="label.${export.label}.name" />
		<propertycopy property="export.cutoff" from="label.${export.label}.kernel.param1" />
		<propertycopy property="export.param2.list" from="label.${export.label}.kernel.param2" silent="yes" />
		<echo>export.param2.list ${export.param2.list}</echo>
		<echo>export.cutoff ${export.cutoff}</echo>
		<echo>export.label.name ${export.label.name}</echo>
		-->
		<property name="label.tree" value="tree" />
		<filterset id="export.filterset">
			<filter token="export.label" value="${export.label}" />
			<filter token="export.cutoff" value="${export.cutoff}" />
			<filter token="export.label.name" value="${export.label.name}" />
			<filter token="kernel.experiment" value="${kernel.experiment}" />
		</filterset>
	</target>
	<target name="kernel.eval" depends="kernel.init.label" description="evaluate kernel on instance tree map">
		<property name="export.param2.suffix" value="" />
		<property name="export.param2" value="" />
		<property name="kernel.evalTest" value="no" />
		<copy file="exp/${kernel.experiment}/kernel.xml" tofile="${export.tree.outdir}/${kernel.xml}" overwrite="yes">
			<filterset>
				<filterset refid="export.filterset" />
				<filter token="export.param2" value="${export.param2}" />
			</filterset>
		</copy>
		<antcall target="kernel.eval.local" />
		<antcall target="kernel.eval.cluster" />
	</target>
	<target name="kernel.eval.local" unless="kernel.cluster" description="launch multiple processes to evaluate kernel">
		<for list="${kernel.slices}" param="kernel.slice" parallel="yes" threadCount="${kernel.mod}">
			<sequential>
				<antcall target="kernel.eval.slice">
					<param name="kernel.slice" value="@{kernel.slice}" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="kernel.eval.cluster" if="kernel.cluster" description="send slices to slaves for processing">
		<!-- pass the properties to the slave that aren't in ytex.properties -->
		<exec executable="qsub">
			<arg line="-sync y -t 1-${kernel.mod} ${cmcant.pbs} kernel.eval.slice.cluster -Dexport.tree.outdir=${export.tree.outdir} -Dlabel.tree=${label.tree} -Dkernel.xml=${kernel.xml} -Dkernel.evalTest=${kernel.evalTest}" />
		</exec>
	</target>
	<target name="kernel.eval.slice.cluster" if="kernel.cluster" description="eval slice on cluster slave">
		<property name="kernel.slice" value="${env.SGE_TASK_ID}" />
		<property file="${export.tree.outdir}/kernel.properties" />
		<echo>kernel.slice ${kernel.slice}</echo>
		<antcall target="kernel.eval.slice" />
	</target>
	<target name="kernel.eval.slice" description="eval slice">
		<echo>export.tree.outdir ${export.tree.outdir}</echo>
		<echo>kernel.xml ${kernel.xml}</echo>
		<echo>kernel.slice ${kernel.slice}</echo>
		<echo>kernel.evalTest ${kernel.evalTest}</echo>
		<java classname="ytex.kernel.evaluator.CorpusKernelEvaluatorImpl" dir="${export.tree.outdir}" fork="yes" classpathref="${kernel.cp}">
			<arg line="-beans ${kernel.xml} -loadInstanceMap ${label.tree} -mod ${kernel.mod} -slice ${kernel.slice} -evalTest ${kernel.evalTest}" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
	</target>
	<target name="kernel.export" depends="kernel.init.label" description="export libsvm gram matrix for specified label">
		<property name="export.dir" value="${basedir}/libsvm/${kernel.experiment}" />
		<mkdir dir="${export.dir}" />
		<copy file="${export.tree.srcdir}/export.xml" tofile="libsvm/${kernel.experiment}/export.xml" overwrite="yes">
			<filterset>
				<filterset refid="export.filterset" />
			</filterset>
		</copy>
		<copy file="exp/${kernel.experiment}/kernel.properties.template" tofile="${export.dir}/kernel.properties" overwrite="yes">
			<filterset>
				<filterset refid="export.filterset" />
			</filterset>
		</copy>
		<antcall target="kernel.export.gram" />
	</target>
	<target name="kernel.export.gram">
		<java classname="ytex.libsvm.LibSVMGramMatrixExporterImpl" classpathref="${kernel.cp}" fork="yes" dir="${export.dir}">
			<arg value="-prop" />
			<arg value="export.xml" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
	</target>
	<target name="suj.ic" description="calculate ic for sujeevan annotations">
		<java classname="ytex.kernel.InfoContentEvaluatorImpl" classpathref="${kernel.cp}" fork="yes" dir="${basedir}/exp/kern-sujeevan">
			<arg value="-prop" />
			<arg value="corpus.properties.xml" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
	</target>
	<target name="cv.all" depends="kernel.eval,kernel.export" description="evaluation kernel, export gram matrices for cv, run libsvm">
		<ant antfile="build.xml" dir="${ytex.home}/ytex.kernel/scripts" target="process.dir" inheritall="true">
			<property name="ytex.home" value="${ytex.home}" />
			<property name="kernel.data" value="${export.dir}" />
		</ant>
	</target>
	<target name="test.all" depends="test.export,test.eval" />

	<target name="test.init.label" description="load properties for the specified label">
		<property name="export.label" value="12" />
		<echo>${basedir}/exp/${kernel.experiment}/experiment.properties</echo>
		<property file="${basedir}/exp/${kernel.experiment}/experiment.properties" />
		<propertycopy property="test.cv.costs" from="label.${export.label}.cv.costs" />
		<propertycopy property="test.kernel.param1" from="label.${export.label}.kernel.param1" silent="yes" />
		<propertycopy property="test.kernel.param2" from="label.${export.label}.kernel.param2" silent="yes" />
		<property name="test.kernel.param1" value="" />
		<property name="test.kernel.param2" value="" />
		<condition property="eval.kernel">
			<equals arg1="${kernel.types}" arg2="4" />
		</condition>
		<condition property="eval.bag">
			<not>
				<equals arg1="${kernel.types}" arg2="4" />
			</not>
		</condition>
		<property name="export.tree.srcdir" value="${basedir}/exp/${tree.name}" />
		<property name="export.dir" value="${basedir}/libsvm/${kernel.experiment}/${export.label}" />
		<property name="export.src.dir" value="${basedir}/exp/${kernel.experiment}" />
		<filterset id="export.filterset">
			<filter token="export.cutoff" value="${test.kernel.param1}" />
			<filter token="export.label" value="${export.label}" />
			<filter token="export.param2" value="${test.kernel.param2}" />
			<filter token="kernel.name" value="${kernel.name}" />
			<filter token="kernel.experiment" value="${kernel.experiment}" />
			<filter token="kernel.hzv.experiment" value="${kernel.hzv.experiment}" />
			<filter token="cv.costs" value="${test.cv.costs}" />
			<filter token="kernel.types" value="${kernel.types}" />
		</filterset>
	</target>
	<target name="test.export" description="export gram matrices, move each gram matrix to a different dir">
		<mkdir dir="${basedir}/libsvm/${kernel.experiment}"/>
		<copy todir="${basedir}/libsvm/${kernel.experiment}" overwrite="yes">
			<fileset dir="${basedir}/exp/${kernel.experiment}" includes="*.xml,kernel.properties" />
		</copy>
		<!--
		<java classname="ytex.libsvm.LibSVMGramMatrixExporterImpl" classpathref="${kernel.cp}" fork="yes" dir="${basedir}/libsvm/${kernel.experiment}">
			<arg value="-prop" />
			<arg value="export-gram.xml" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
		-->
		<for list="${labels}" param="export.label">
			<sequential>
				<antcall target="test.init.export">
					<param name="export.label" value="@{export.label}" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="test.init.export" depends="test.init.label" description="clean export dir, generate kernel.properties">
		<property name="kernel.evalLines" value="-q -b 1  -t 4 -c ${test.cv.costs}" />
		<echo>${basedir}/libsvm/${kernel.experiment}/label${export.label}_train_data.properties</echo>
		<echoproperties destfile="${basedir}/libsvm/${kernel.experiment}/label${export.label}_train_data.properties">
			<propertyset id="properties-starting-with-bar">
				<propertyref name="kernel.evalLines" />
			</propertyset>
		</echoproperties>
	</target>
	<target name="test.eval" depends="test.init.label" description="run libsvm">
		<echo>run libsvm on directory export.dir</echo>
		<echo>kernel.exp.base ${kernel.exp.base}</echo>
		<ant antfile="build.xml" dir="${ytex.home}/ytex.kernel/scripts" target="iter.dirs" inheritall="true">
			<property name="ytex.home" value="${ytex.home}" />
			<property name="no.genParams" value="yes"/>
			<property name="kernel.exp.base" value="${basedir}/libsvm/${kernel.experiment}" />
		</ant>
	</target>
	<target name="infocontent" description="compute infocontent using the specified properties.  you must specify the correct concept graph in ytex.properties.">
		<property name="kernel.experiment" value="kern-ctakes-umlspar" />
		<java classname="ytex.kernel.InfoContentEvaluatorImpl" classpathref="${kernel.cp}" fork="yes" dir="exp/${kernel.experiment}">
			<arg value="-prop" />
			<arg value="corpus.properties.xml" />
			<jvmarg value="-Xmx1g" />
			<jvmarg value="-Xms1g" />
			<jvmarg value="${log4j.arg}" />
			<jvmarg value="${java.log.arg}" />
		</java>
	</target>
</project>
