<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="scope">label</entry>
	<entry key="instanceClassQuery"><![CDATA[
	select i.instance_id, j.judgement_id, i.train, d.disease_id, f.fold, f.run
	from cv_fold f
	inner join cv_fold_instance i on f.cv_fold_id = i.cv_fold_id
	inner join i2b2_2008_anno a on a.disease = f.label and a.docId = i.instance_id and a.source = 'intuitive'
	inner join i2b2_2008_disease d on d.disease = a.disease
	inner join i2b2_2008_judgement j on j.judgement = a.judgement
    inner join hotspot_instance hi 
    	on hi.instance_id = i.instance_id
    	and hi.label = a.disease
		and hi.corpus_name = 'i2b2.2008'
		and hi.experiment = 'bag-impcui'	
	/* 
	limit to labels that have meaningful training data at this cutoff 
	this means more than one class
	*/
	inner join (
		select disease_id
		from
		(
			select d.disease_id, count(distinct j.judgement_id) jc
			from i2b2_2008_doc doc
			inner join i2b2_2008_anno a on doc.docId = a.docId and a.source = 'intuitive'
			inner join i2b2_2008_disease d on d.disease = a.disease
			inner join i2b2_2008_judgement j on j.judgement = a.judgement
		    inner join hotspot_instance hi 
		    	on hi.instance_id = doc.docId
		    	and hi.label = a.disease
				and hi.corpus_name = 'i2b2.2008'
				and hi.experiment = 'bag-impcui'
			left join hotspot_zero_vector hzv
				on hzv.hotspot_instance_id = hi.hotspot_instance_id
				and hzv.cutoff = @export.cutoff@
			where hzv.hotspot_zero_vector_id is null
			and  doc.documentSet = 'train'
		  group by d.disease_id
		) s where jc > 1	
	) dsf on dsf.disease_id = d.disease_id    
	left join hotspot_zero_vector hzv
		on hzv.hotspot_instance_id = hi.hotspot_instance_id
		and hzv.cutoff = @export.cutoff@
	where hzv.hotspot_zero_vector_id is null
	and f.corpus_name = 'i2b2.2008'
]]></entry>
	<entry key="numericWordQuery"><![CDATA[
	select instance_id, 
        cast(concat(if(r.feature_name is null, '', if(negated > 0, 'neg_', 'pos_')), lower(covered_text)) as char(100)) word, 1
	from
	(
		select distinct hi.instance_id, covered_text, coalesce(wt.negated, 0) negated
        from hotspot_instance hi
        /* limit to training */
        inner join i2b2_2008_doc d 
            on hi.instance_id = d.docId 
            and d.documentSet = 'train'
        /* limit to label */
        inner join i2b2_2008_disease ds 
            on hi.label = ds.disease
            and ds.disease_id = :label
        /* limit to sentence */
        inner join hotspot_sentence hs
            on hi.hotspot_instance_id = hs.hotspot_instance_id
            and hs.evaluation >=  @export.cutoff@
        /* get words and numbers in sentence */
        inner join anno_contain ac 
            on ac.parent_anno_base_id = hs.anno_base_id
            and ac.child_uima_type_id in (22,25,26)
        /* get covered text */
        inner join anno_base ab
        	on ab.anno_base_id = ac.child_anno_base_id
        	and covered_text is not null
        	and length(covered_text) > 0
        /* get negation status */
        left join anno_word_token wt
            on wt.anno_base_id = ac.child_anno_base_id
        where hi.corpus_name = 'i2b2.2008'
        and hi.experiment = 'bag-impcui'
    ) s
    left join
    (
        /* see if the feature is a hotspot */
        select r.feature_name
        from feature_eval e 
            inner join i2b2_2008_disease ds 
            on e.label = ds.disease
            and ds.disease_id = :label
        inner join feature_rank r
            on r.feature_eval_id = e.feature_eval_id
            and r.evaluation >= @export.cutoff@
        where e.corpus_name = 'i2b2.2008'
        and e.type = 'InfoGainAttributeEval'
        and e.featureset_name = 'usword'
        and e.cv_fold_id = 0
    ) r on r.feature_name = s.covered_text
    ]]></entry>
</properties>
