<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="scope">label</entry>
	<entry key="instanceClassQuery"><![CDATA[
	select a.instance_id, a.class, if(doc_group = 'train', 1, 0) train, a.label
	from corpus_doc doc
	/* get doc labels */ 
	inner join corpus_label a 
		on a.instance_id = doc.instance_id
		and a.corpus_name = doc.corpus_name
	inner join cv_best_svm b
	    on b.label = a.label
	    and b.corpus_name = a.corpus_name
	    and b.experiment = 'cui'
	/* 
	limit to non-zero vectors 
	get the minimum evaluation via the propagated IG
	*/
    inner join hotspot_instance hi 
    	on hi.instance_id = a.instance_id
    	and hi.label = a.label
		and hi.corpus_name = a.corpus_name
		and hi.experiment = 'imputed'
		and hi.min_rank <= b.param1
	where a.corpus_name = 'i2b2.2008'
]]></entry>
	<entry key="prepareScript"><![CDATA[
drop table if exists tmp_cui
;
create temporary table tmp_cui
as
select tfr.feature_name cui
from feature_rank tfr
inner join feature_eval tfe
	on tfe.feature_eval_id = tfr.feature_eval_id
	and tfe.featureset_name = 'cui'
	and tfe.type = 'tfidf'
	and tfe.corpus_name = 'i2b2.2008'
where tfr.evaluation < 1000
;
create unique index NK_cui on tmp_cui (cui)
;
]]></entry>
	<entry key="numericWordQuery"><![CDATA[
	select instance_id, 
        cast(concat(if(r.feature_name is null, '', if(negated > 0, 'neg_', 'pos_')), lower(coveredText)) as char(100)) word, 1
	from
	(
		select distinct hi.instance_id, coveredText, coalesce(negated, 0) negated
        from corpus_doc doc
		inner join corpus_label a 
			on doc.instance_id = a.instance_id 
			and doc.corpus_name = a.corpus_name
			and a.label = :label
		inner join hotspot_instance hi 
			on hi.instance_id = doc.instance_id
		    and hi.label = a.label
			and hi.corpus_name = doc.corpus_name
			and hi.experiment = 'imputed'
        /* limit to sentence */
        inner join hotspot_sentence hs
            on hi.hotspot_instance_id = hs.hotspot_instance_id
		inner join cv_best_svm b
			on b.label = a.label
			and b.corpus_name = a.corpus_name
            and hs.rank <=  b.param1
            and b.experiment = 'cui'
        /* get words and numbers in sentence */
        inner join anno_contain ac 
            on ac.parent_anno_base_id = hs.anno_base_id
            and ac.child_uima_type_id in (22,25,26)
        /* get covered text */
        inner join anno_token ab
        	on ab.anno_base_id = ac.child_anno_base_id
        	and coveredText is not null
        	and length(coveredText) > 0
        where doc.corpus_name = 'i2b2.2008'
    ) s
    left join
    (
        /* see if the feature is a hotspot */
        select r.feature_name
        from feature_eval e 
        inner join feature_rank r
			on r.feature_eval_id = e.feature_eval_id
        /* cutoff comes from word experiment */
        inner join cv_best_svm s
        	on s.label = e.label
        	and s.corpus_name = e.corpus_name
        	and s.experiment = 'word'
            and r.rank <= s.param1
        where e.corpus_name = 'i2b2.2008'
        and e.type = 'InfoGainAttributeEval'
        and e.featureset_name = 'usword'
        and e.label = :label
    ) r on r.feature_name = s.coveredText

    union
    
	select instance_id, concat('cui:', code), 1
	from
	(
		select distinct hi.instance_id, code
        from corpus_doc doc
		inner join corpus_label a 
			on doc.instance_id = a.instance_id 
			and doc.corpus_name = a.corpus_name
			and a.label = :label
		inner join hotspot_instance hi 
			on hi.instance_id = doc.instance_id
		    and hi.label = a.label
			and hi.corpus_name = doc.corpus_name
			and hi.experiment = 'imputed'
        /* limit to sentence */
        inner join hotspot_sentence hs
            on hi.hotspot_instance_id = hs.hotspot_instance_id
		inner join cv_best_svm b
			on b.label = a.label
			and b.corpus_name = a.corpus_name
            and hs.rank <=  b.param1
            and b.experiment = 'cui'
        /* get words and numbers in sentence */
        inner join anno_contain ac 
            on ac.parent_anno_base_id = hs.anno_base_id
        inner join anno_ontology_concept c
        	on c.anno_base_id = ac.child_anno_base_id
        /* limit concepts based on type and frequency */
        inner join tmp_cui tc
        	on tc.cui = c.code
        where doc.corpus_name = 'i2b2.2008'
    ) s
    ]]></entry>
</properties>
