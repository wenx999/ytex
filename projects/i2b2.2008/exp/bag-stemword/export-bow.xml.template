<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!--
bag-stemword
stemmed words
+- 100 characters around hotspot
negex only on hotspots
-->
<properties>
	<entry key="scope">label</entry>
	<entry key="instanceClassQuery"><![CDATA[
	select i.instance_id, j.judgement_id, i.train, d.disease_id, f.fold, f.run
	from cv_fold f
	inner join cv_fold_instance i on f.cv_fold_id = i.cv_fold_id
	inner join i2b2_2008_anno a on a.disease = f.label and a.docId = i.instance_id and a.source = 'intuitive'
	inner join i2b2_2008_disease d on d.disease = a.disease
	inner join i2b2_2008_judgement j on j.judgement = a.judgement
	/* limit to non zero vectors */
	inner join (
		select distinct hi.label, hi.instance_id
		from hotspot_instance hi
		inner join hotspot_sentence hs 
		    on hi.hotspot_instance_id = hs.hotspot_instance_id
		    and hs.evaluation >= @export.cutoff@
		where hi.experiment = 'bag-usword' 
		and hi.corpus_name = 'i2b2.2008'
	) hi on hi.label = a.disease and hi.instance_id = i.instance_id
	/* 
	limit to labels that have meaningful training data at this cutoff 
	this means more than one class
	*/
	inner join (
		select label
		from
		(
			select hi.label, count(distinct a.judgement) jc
			from hotspot_instance hi
			inner join hotspot_sentence hs 
			    on hi.hotspot_instance_id = hs.hotspot_instance_id
			    and hs.evaluation > @export.cutoff@
			inner join i2b2_2008_anno a 
			    on a.disease = hi.label 
			    and a.docId = hi.instance_id 
			    and a.source = 'intuitive'
			where hi.experiment = 'bag-usword' 
			and hi.corpus_name = 'i2b2.2008'
			group by hi.label
		) s where jc > 1	
	) dsf on dsf.label = a.disease
	where f.corpus_name = 'i2b2.2008'
]]></entry>
	<entry key="numericWordQuery"><![CDATA[
	select instance_id, 
    	cast(concat(if(rank = 0, '', if(negated > 0, 'neg_', 'pos_')), lower(covered_text)) as char(100)) word, 1
	from
	(
		select distinct hi.instance_id, coalesce(wt.canonical_form, covered_text) covered_text, coalesce(wt.negated, 0) negated, coalesce(r.rank, 0) rank
		from hotspot_instance hi
		/* limit to training */
		inner join i2b2_2008_doc d 
			on hi.instance_id = d.docId 
			and d.documentSet = 'train'
		/* limit to label */
		inner join i2b2_2008_disease ds 
		    on hi.label = ds.disease
		    and ds.disease_id = :label
		/* limit to words in hotspot region */
		inner join hotspot_sentence hs
		    on hi.hotspot_instance_id = hs.hotspot_instance_id
		    and hs.evaluation >=  @export.cutoff@
		/* get words */
		inner join anno_base w
		    on w.anno_base_id = hs.anno_base_id
		    and covered_text is not null
	    /* get negation status */
	    left join anno_word_token wt
	        on wt.anno_base_id = w.anno_base_id
	    left join
	    (
	    	/* see if the feature is a hotspot */
	        select r.feature_name, r.rank
	        from feature_eval e 
	     		inner join i2b2_2008_disease ds 
	            on e.label = ds.disease
	            and ds.disease_id = :label
	        inner join feature_rank r
	            on r.feature_eval_id = e.feature_eval_id
	            and r.evaluation >= @export.cutoff@
	        where e.corpus_name = 'i2b2.2008'
	        and e.type = 'InfoGainAttributeEval'
	        and e.featureset_name = 'usword'
	        and e.cv_fold_id = 0
	    ) r on r.feature_name = w.covered_text
			where hi.corpus_name = 'i2b2.2008'
			and hi.experiment = 'bag-usword'
    ) s
	]]></entry>
</properties>
